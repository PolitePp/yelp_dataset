version: '3'
services:
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    networks:
      - hadoopspark
    container_name: spark-master
    volumes:
      - ./spark_jobs:/opt/hadoopspark
    ports:
      - "8080:8080"
      - "7077:7077"
    depends_on:
      - namenode
      - datanode
  spark-worker-1:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    networks:
      - hadoopspark
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
  spark-worker-2:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    networks:
      - hadoopspark
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    networks:
      - hadoopspark
    container_name: namenode
    volumes:
      - ./data/namenode:/hadoop/dfs/name
      - ./input_data:/opt/input_data
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false

    ports:
      - "9870:9870"
      - "9000:9000"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    networks:
      - hadoopspark
    container_name: datanode
    volumes:
      - ./data/datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

networks:
  hadoopspark:
    external: true